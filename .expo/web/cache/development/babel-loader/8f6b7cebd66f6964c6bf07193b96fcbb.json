{"ast":null,"code":"var _jsxFileName = \"/Users/mauromarini/Desktop/covid19_dashboard/App.js\";\nimport { StatusBar } from 'expo-status-bar';\nimport React from 'react';\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { createDrawerNavigator } from '@react-navigation/drawer';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { dimens } from \"./src/theme/dimens\";\nimport { styles } from \"./src/theme/style\";\nimport { screenTitles } from \"./src/contents/strings\";\nimport HomeScreen from \"./src/screens/homeScreen\";\nimport LatestUpdateResumeScreen from \"./src/screens/latestUpdateResumeScreen\";\nimport NewCasesScreen from \"./src/screens/newCasesScreen\";\nimport RecoveredScreen from \"./src/screens/recoveredScreen\";\nimport DiedScreen from \"./src/screens/diedScreen\";\nimport CurrentPositiveScreen from \"./src/screens/currentPositiveScreen\";\nimport SwabsResumeScreen from \"./src/screens/swabsScreen\";\n\nfunction NotificationsScreen(_ref) {\n  var navigation = _ref.navigation;\n  return React.createElement(View, {\n    style: {\n      flex: 1,\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, React.createElement(Button, {\n    onPress: function onPress() {\n      return navigation.goBack();\n    },\n    title: \"Go back home\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }\n  }));\n}\n\nvar Drawer = createDrawerNavigator();\nexport default function App() {\n  var dimensions = Dimensions.get('window').width;\n  var isLargeScreen = dimensions >= dimens.largeScreen;\n  return React.createElement(NavigationContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, React.createElement(Drawer.Navigator, {\n    initialRouteName: \"Home\",\n    openByDefault: true,\n    drawerType: isLargeScreen ? 'permanent' : 'back',\n    drawerStyle: isLargeScreen ? null : {\n      width: '100%'\n    },\n    overlayColor: \"transparent\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }, React.createElement(Drawer.Screen, {\n    name: screenTitles.home,\n    component: HomeScreen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }\n  }), React.createElement(Drawer.Screen, {\n    name: screenTitles.latestUpdateResume,\n    component: LatestUpdateResumeScreen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }\n  }), React.createElement(Drawer.Screen, {\n    name: screenTitles.newCases,\n    component: NewCasesScreen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }\n  }), React.createElement(Drawer.Screen, {\n    name: screenTitles.recovered,\n    component: RecoveredScreen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }\n  }), React.createElement(Drawer.Screen, {\n    name: screenTitles.died,\n    component: DiedScreen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }\n  }), React.createElement(Drawer.Screen, {\n    name: screenTitles.currentPositive,\n    component: CurrentPositiveScreen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }\n  }), React.createElement(Drawer.Screen, {\n    name: screenTitles.swab,\n    component: SwabsResumeScreen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }\n  })));\n}","map":{"version":3,"sources":["/Users/mauromarini/Desktop/covid19_dashboard/App.js"],"names":["StatusBar","React","createDrawerNavigator","NavigationContainer","dimens","styles","screenTitles","HomeScreen","LatestUpdateResumeScreen","NewCasesScreen","RecoveredScreen","DiedScreen","CurrentPositiveScreen","SwabsResumeScreen","NotificationsScreen","navigation","flex","alignItems","justifyContent","goBack","Drawer","App","dimensions","Dimensions","get","width","isLargeScreen","largeScreen","home","latestUpdateResume","newCases","recovered","died","currentPositive","swab"],"mappings":"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","sourcesContent":["/**\n * covid19_dashboard copyright Â© 2020\n * Created by mauromarini on 18/07/2020\n * Repository: http://github.com/marinimau/covid19_dashboard\n * Location: Baratili San Pietro\n */\n\nimport {StatusBar} from 'expo-status-bar';\nimport React from 'react';\nimport {Button, Dimensions, Text, View} from 'react-native';\nimport {createDrawerNavigator} from '@react-navigation/drawer';\nimport {NavigationContainer} from '@react-navigation/native';\nimport {dimens} from \"./src/theme/dimens\";\nimport {styles} from \"./src/theme/style\";\nimport {screenTitles} from \"./src/contents/strings\";\n\n/* Screens Import */\nimport HomeScreen from \"./src/screens/homeScreen\";\nimport LatestUpdateResumeScreen from \"./src/screens/latestUpdateResumeScreen\";\nimport NewCasesScreen from \"./src/screens/newCasesScreen\";\nimport RecoveredScreen from \"./src/screens/recoveredScreen\";\nimport DiedScreen from \"./src/screens/diedScreen\";\nimport CurrentPositiveScreen from \"./src/screens/currentPositiveScreen\";\nimport SwabsResumeScreen from \"./src/screens/swabsScreen\";\n\nfunction NotificationsScreen({navigation}) {\n    return (\n        <View style={{flex: 1, alignItems: 'center', justifyContent: 'center'}}>\n            <Button onPress={() => navigation.goBack()} title=\"Go back home\"/>\n        </View>\n    );\n}\n\nconst Drawer = createDrawerNavigator();\n\nexport default function App() {\n\n    const dimensions = Dimensions.get('window').width;\n\n    const isLargeScreen = dimensions >= dimens.largeScreen;\n\n    return (\n        <NavigationContainer>\n            <Drawer.Navigator\n                initialRouteName=\"Home\"\n                openByDefault\n                drawerType={isLargeScreen ? 'permanent' : 'back'}\n                drawerStyle={isLargeScreen ? null : {width: '100%'}}\n                overlayColor=\"transparent\">\n                <Drawer.Screen name={screenTitles.home} component={HomeScreen}/>\n\n                <Drawer.Screen name={screenTitles.latestUpdateResume} component={LatestUpdateResumeScreen}/>\n                <Drawer.Screen name={screenTitles.newCases} component={NewCasesScreen}/>\n                <Drawer.Screen name={screenTitles.recovered} component={RecoveredScreen}/>\n                <Drawer.Screen name={screenTitles.died} component={DiedScreen} />\n                <Drawer.Screen name={screenTitles.currentPositive} component={CurrentPositiveScreen}/>\n                <Drawer.Screen name={screenTitles.swab} component={SwabsResumeScreen} />\n\n            </Drawer.Navigator>\n        </NavigationContainer>\n    );\n}\n\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}